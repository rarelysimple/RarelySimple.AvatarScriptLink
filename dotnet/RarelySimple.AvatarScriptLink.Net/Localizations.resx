<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cannotAddAnotherRowObject" xml:space="preserve">
    <value>Cannot add another RowObject to this FormObject because either it is not a Multiple Iteration form or it already has the maximun number of rows.</value>
  </data>
  <data name="couldNotDetermineNextRowId" xml:space="preserve">
    <value>Could not determine next available RowId in this FormObject.</value>
  </data>
  <data name="errorCodeIsNotValid" xml:space="preserve">
    <value>Error Code is not valid.</value>
  </data>
  <data name="errorMessageIsNotValidOpenForm" xml:space="preserve">
    <value>Error Message is not a valid OpenForm string.</value>
  </data>
  <data name="errorMessageIsNotValidUrl" xml:space="preserve">
    <value>Error Message is not a valid URL string.</value>
  </data>
  <data name="fieldNumberAlreadyExists" xml:space="preserve">
    <value>The RowObject already contains a FieldObject with this FieldNumber.</value>
  </data>
  <data name="fieldObjectAlreadyExists" xml:space="preserve">
    <value>The RowObject already contains this FieldObject.</value>
  </data>
  <data name="firstFormCannotBeMultipleIteration" xml:space="preserve">
    <value>The first FormObject cannot be a Multiple Iteration form.</value>
  </data>
  <data name="formIdAlreadyExists" xml:space="preserve">
    <value>A FormObject with this FormId already exists.</value>
  </data>
  <data name="formObjectMissingCurrentRow" xml:space="preserve">
    <value>The FormObject does not contain a CurrentRow.</value>
  </data>
  <data name="formObjectMissingRows" xml:space="preserve">
    <value>The FormObject does not contain any rows.</value>
  </data>
  <data name="jsonCouldNotBeDeserialized" xml:space="preserve">
    <value>JSON string could not be deserialized to desired object.</value>
  </data>
  <data name="methodCannotBeInherited" xml:space="preserve">
    <value>This method cannot be inherited. Please create new implementation in the derived class.</value>
  </data>
  <data name="noFieldObjectsFound" xml:space="preserve">
    <value>None of the identified FieldsObjects were found in this OptionObject.</value>
  </data>
  <data name="noFieldObjectsFoundByFieldNumber" xml:space="preserve">
    <value>No FieldObjects were found matching provided FieldNumber: {0}</value>
  </data>
  <data name="noFieldObjectsWereSet" xml:space="preserve">
    <value>None of the identified FieldsObjects were able to be set.</value>
  </data>
  <data name="noFormObjectsFoundByFormId" xml:space="preserve">
    <value>No FormObjects were found matching provided FormId: {0}</value>
  </data>
  <data name="noRowObjectsFoundByRowId" xml:space="preserve">
    <value>No RowObjects were found matching provided RowId: {0}.</value>
  </data>
  <data name="objectCannotBeSerializedJson" xml:space="preserve">
    <value>Object could not be serialized as JSON.</value>
  </data>
  <data name="objectCannotBeSerializedXml" xml:space="preserve">
    <value>Object could not be serialized as XML.</value>
  </data>
  <data name="objectCannotBeSerializedXmlOrJson" xml:space="preserve">
    <value>Object could not be serialized as XML or JSON.</value>
  </data>
  <data name="optionObjectMissingForms" xml:space="preserve">
    <value>The OptionObject does not contain any forms.</value>
  </data>
  <data name="parameterCannotBeNull" xml:space="preserve">
    <value>Parameter cannot be null.</value>
  </data>
  <data name="parameterIsNotValid" xml:space="preserve">
    <value>Parameter is not valid.</value>
  </data>
  <data name="rowIdAlreadyExists" xml:space="preserve">
    <value>A RowObject with this RowId already exists in this FormObject.</value>
  </data>
  <data name="rowObjectMissingFields" xml:space="preserve">
    <value>The RowObject does not contain any fields.</value>
  </data>
  <data name="serializedStringIncompatibleFormat" xml:space="preserve">
    <value>Serialized string is not in a compatible format</value>
  </data>
  <data name="unableToIdentifyFieldObject" xml:space="preserve">
    <value>Unable to determine which FieldObject to update. Please specify the FormId and RowId associated with the intended FieldObject.</value>
  </data>
  <data name="xmlCouldNotBeDeserialized" xml:space="preserve">
    <value>XML string could not be deserialized to desired object.</value>
  </data>
</root>