"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8922],{4596:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=i(5893),n=i(1151);const r={slug:"testing-your-scriptlink-api-with-soapui",title:"Testing Your ScriptLink API with SoapUI",authors:["scottolsonjr"],tags:["scriptlink","myavatar","dotnet","c#","vb","visual basic","visual studio"]},s=void 0,o={permalink:"/blog/testing-your-scriptlink-api-with-soapui",source:"@site/blog/2020-02-18-testing-your-scriptlink-api-with-soapui/index.mdx",title:"Testing Your ScriptLink API with SoapUI",description:"Welcome back to my series on getting started with myAvatar ScriptLink.",date:"2020-02-18T00:00:00.000Z",tags:[{label:"scriptlink",permalink:"/blog/tags/scriptlink"},{label:"myavatar",permalink:"/blog/tags/myavatar"},{label:"dotnet",permalink:"/blog/tags/dotnet"},{label:"c#",permalink:"/blog/tags/c"},{label:"vb",permalink:"/blog/tags/vb"},{label:"visual basic",permalink:"/blog/tags/visual-basic"},{label:"visual studio",permalink:"/blog/tags/visual-studio"}],readingTime:4.6,hasTruncateMarker:!0,authors:[{name:"Scott Olson Jr",title:"RarelySimple.AvatarScriptLink Maintainer",url:"https://github.com/scottolsonjr",imageURL:"https://avatars.githubusercontent.com/u/984715?v=4",key:"scottolsonjr"}],frontMatter:{slug:"testing-your-scriptlink-api-with-soapui",title:"Testing Your ScriptLink API with SoapUI",authors:["scottolsonjr"],tags:["scriptlink","myavatar","dotnet","c#","vb","visual basic","visual studio"]},unlisted:!1,prevItem:{title:"Announcing AvatarScriptLink.NET General Availability",permalink:"/blog/announcing-avatarscriptlink.net-general-availability"},nextItem:{title:"Creating Your First myAvatar ScriptLink API Using C#",permalink:"/blog/creating-your-first-myavatar-scriptlink-api-using-c-sharp"}},l={authorsImageUrls:[void 0]},c=[];function u(t){const e={a:"a",p:"p",...(0,n.a)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"Welcome back to my series on getting started with myAvatar ScriptLink.\nToday, we are looking at testing.\nAs tempting as it may be, we should not wait to test our ScriptLink APIs until they are available in production.\nWe want to test our code before it impacts the users.\nIn our first test, we will set up SoapUI to send a request to our development environment and verify the response."}),"\n",(0,a.jsxs)(e.p,{children:["When we left off, we had ",(0,a.jsx)(e.a,{href:"/blog/creating-your-first-myavatar-scriptlink-api-using-c-sharp",children:"created our first Hello World ScriptLink API in .NET using C#"})," and Visual Basic.\nIf we created them correctly, the we should be able to call the RunScript method with the HelloWorld parameter and receive an Error Code 3 with the ErrorMsg \"Hello, World!'.\nLet\u2019s test that."]})]})}function p(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(u,{...t})}):u(t)}},1151:(t,e,i)=>{i.d(e,{Z:()=>o,a:()=>s});var a=i(7294);const n={},r=a.createContext(n);function s(t){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),a.createElement(r.Provider,{value:e},t.children)}}}]);